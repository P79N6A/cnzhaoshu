<style scoped>
  .img-warp {
    position: fixed;
    left: 0;
    right: 0;
    top: 0;
    bottom: 0;
    width: 100%;
    height: 100%;
    background: rgba(1, 1, 1, .5);
    z-index: 10000;
  }

  .img-warp-inner {
    position: absolute;
    left: 0;
    right: 0;
    top: 0;
    bottom: 0;
    height: 667px;
  }

  .demo-carousel img {
    height: 667px;
  }

  .dengpostition {
    position: relative;
    margin: 0 auto;
    width: 375px;
    margin-top: 50px;
  }

  .left-img-warp {
    height: 60px;
  }

  .left-img-warp img {
    height: 60px;
    padding-left: 20px;
  }

  .bind-one span {
    margin-right: 20px;
  }

  .bind-one Card {
    height: 65px;
  }
</style>
<template>
  <div>
    <div class="img-warp" v-show="imgwarp" @click="closeImgWarp">
      <div class="img-warp-inner">
        <Carousel v-model="value1" loop :height="667" class="dengpostition">
          <CarouselItem v-for="item in warpImgs" :key="index">
            <div class="demo-carousel"><img :src="item" alt=""></div>
          </CarouselItem>
        </Carousel>
      </div>

    </div>
    <div v-if="bidList && bidList.length != 0" class="bind-one">
      <Tabs type="card" size="small" @on-click="tabclick">
        <TabPane @on-click="tender_status = 1" label="待审核">
        </TabPane>
        <TabPane @on-click="tender_status = 2" label="已推荐">
        </TabPane>
        <TabPane @on-click="tender_status = 3" label="已舍弃">
        </TabPane>
      </Tabs>
      <div>
        <Card v-for="(item,index) in bidList" v-show="item.tender_status == tender_status" :key="index">
          <Row type="flex" justify="center" align="middle" class="code-row-bg">
            <Col span="3" class="left-img-warp"><img @click="showImgWarp(index)"
                                                     :src="item.tree_imgs?item.tree_imgs[0]:''" alt=""></Col>
            <Col span="17">
              <span style="font-size: 14px; font-weight: bold; color: rgb(70, 76, 91);">￥{{item.tree_price}}</span>
              <span style="font-size: 14px; font-weight: bold; color: rgb(70, 76, 91);">{{item.tree_num}}株</span>
              <span style="font-size: 14px; font-weight: bold; color: rgb(70, 76, 91);">{{item.tree_address?item.tree_address:'无地址'}}</span>
              <span style="font-size: 14px; font-weight: bold; color: rgb(70, 76, 91);">{{item.userinfo?item.userinfo.name:'无姓名'}}</span>
              <span style="font-size: 14px; font-weight: bold; color: rgb(70, 76, 91);">{{item.userinfo?item.userinfo.phone:'无电话'}}</span>
            </Col>
            <Col span="4">
              <Button type="info" v-show="item.tender_status != 2" style="margin-right: 30px" @click="recommend(index)">
                推荐
              </Button>
              <Button type="error" v-show="item.tender_status != 3" @click="abandon(index)">舍弃</Button>
            </Col>
          </Row>
        </Card>
      </div>
    </div>
    <div v-else>
      <span style="font-size: 14px; font-weight: bold; color: rgb(70, 76, 91);" @click="changeStatus">无投标信息</span>
    </div>
  </div>

</template>

<script>
  import {changeBidStatus} from '@/api/data'

  export default {
    props: {
      params: Object
    },
    data () {
      return {
        value1: 0,
        imgwarp: false,
        bidList: [],
        warpImgs: [],
        abandonValue: '',
        tender_status: 1

      }
    },
    methods: {
      tabclick (name) {
        this.tender_status = name + 1
      },
      closeImgWarp (e) {
        if (e.target.className != 'img-warp-inner') return
        this.imgwarp = false
      },
      showImgWarp (index) {
        let bidOne = this.bidList[index]
        if (!bidOne.tree_imgs) {
          return
        }
        this.warpImgs = bidOne.tree_imgs
        this.imgwarp = true
      },
      abandon (index) {
        this.abandonValue = ''
        this.$Modal.confirm({
          title: '舍弃理由',
          render: (h) => {
            return h('Input', {
              props: {
                value: this.abandonValue,
                autofocus: 'autofocus',
                placeholder: '请输入舍弃理由!'
              },
              on: {
                input: (val) => {
                  this.abandonValue = val
                }
              }
            })
          },
          onOk: () => {
            if (this.abandonValue == '') {
              this.$Message.warning({
                content: '请填写舍弃理由！'
              })
            } else {
              this.changeStatus(index, false)
            }
          }
        })
        //解决框架自行获取焦点Bug
        setTimeout(function () {
          document.getElementsByClassName('ivu-input')[0].focus()
        }, 100)

      },
      recommend (index) {
        this.$Modal.confirm({
          title: '推荐',
          content: '确定推荐本条投标吗？',
          'ok-text': '推荐',
          onOk: () => {
            this.changeStatus(index, true)
          }

        })
      },
      changeStatus (tenderIndex, is) {
        let bidOne = this.bidList[tenderIndex]
        let data = {
          tender_order_id: bidOne.tender_order_id,
          status: is ? 2 : 3,
          remark: is ? '' : this.abandonValue
        }
        changeBidStatus(data).then(res => {
          if (res.data.status == 0) {
            this.$Message.success({
              content: '操作成功',
            })
            this.$set(this.bidList[tenderIndex],"tender_status",is ? 2 : 3)
            this.$emit("changTotal_sum",this.params.index,tenderIndex,is ? 2 : 3);
          } else {
            this.$Message.warning({
              content: '服务器繁忙'
            })
          }
        })
      }
    },
    mounted () {
      this.bidList = this.params.row.tender_info;
      console.log(this.params.row.tender_info);
    },
    directives: {
      focus: {
        // 指令的定义
        inserted: function (el) {
          el.focus()
        }
      }
    }

  }
</script>


