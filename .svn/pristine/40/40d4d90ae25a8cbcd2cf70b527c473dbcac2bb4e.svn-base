{"remainingRequest":"D:\\zhaoshu\\admin\\iview-admin\\node_modules\\thread-loader\\dist\\cjs.js!D:\\zhaoshu\\admin\\iview-admin\\node_modules\\babel-loader\\lib\\index.js!D:\\zhaoshu\\admin\\iview-admin\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\zhaoshu\\admin\\iview-admin\\src\\view\\project\\project-info\\project-info-extend.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\zhaoshu\\admin\\iview-admin\\src\\view\\project\\project-info\\project-info-extend.vue","mtime":1537162200054},{"path":"D:\\zhaoshu\\admin\\iview-admin\\.babelrc","mtime":1536565681652},{"path":"D:\\zhaoshu\\admin\\iview-admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1536566309539},{"path":"D:\\zhaoshu\\admin\\iview-admin\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\zhaoshu\\admin\\iview-admin\\node_modules\\babel-loader\\lib\\index.js","mtime":1529635966000},{"path":"D:\\zhaoshu\\admin\\iview-admin\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { changeBidStatus } from '@/api/data';\nexport default {\n  props: {\n    params: Object\n  },\n  data: function data() {\n    return {\n      value1: 0,\n      imgwarp: false,\n      bidList: [],\n      warpImgs: [],\n      abandonValue: '',\n      tender_status: 1\n    };\n  },\n  methods: {\n    tabclick: function tabclick(name) {\n      this.tender_status = name + 1;\n    },\n    closeImgWarp: function closeImgWarp(e) {\n      if (e.target.className != 'img-warp-inner') return;\n      this.imgwarp = false;\n    },\n    showImgWarp: function showImgWarp(index) {\n      var bidOne = this.bidList[index];\n\n      if (!bidOne.tree_imgs) {\n        return;\n      }\n\n      this.warpImgs = bidOne.tree_imgs;\n      this.imgwarp = true;\n    },\n    abandon: function abandon(index) {\n      var _this = this;\n\n      this.abandonValue = '';\n      this.$Modal.confirm({\n        title: '舍弃理由',\n        render: function render(h) {\n          return h('Input', {\n            props: {\n              value: _this.abandonValue,\n              autofocus: 'autofocus',\n              placeholder: '请输入舍弃理由!'\n            },\n            on: {\n              input: function input(val) {\n                _this.abandonValue = val;\n              }\n            }\n          });\n        },\n        onOk: function onOk() {\n          if (_this.abandonValue == '') {\n            _this.$Message.warning({\n              content: '请填写舍弃理由！'\n            });\n          } else {\n            _this.changeStatus(index, false);\n          }\n        }\n      }); //解决框架自行获取焦点Bug\n\n      setTimeout(function () {\n        document.getElementsByClassName('ivu-input')[0].focus();\n      }, 100);\n    },\n    recommend: function recommend(index) {\n      var _this2 = this;\n\n      this.$Modal.confirm({\n        title: '推荐',\n        content: '确定推荐本条投标吗？',\n        'ok-text': '推荐',\n        onOk: function onOk() {\n          _this2.changeStatus(index, true);\n        }\n      });\n    },\n    changeStatus: function changeStatus(index, is) {\n      var _this3 = this;\n\n      var bidOne = this.bidList[index];\n      var data = {\n        tender_order_id: bidOne.tender_order_id,\n        status: is ? 2 : 3,\n        remark: is ? '' : this.abandonValue\n      };\n      changeBidStatus(data).then(function (res) {\n        if (res.data.status == 0) {\n          _this3.$Message.success({\n            content: '操作成功'\n          });\n\n          _this3.$set(_this3.bidList[index], 'tender_status', is ? 2 : 3);\n        } else {\n          _this3.$Message.warning({\n            content: '服务器繁忙'\n          });\n        }\n      });\n    }\n  },\n  mounted: function mounted() {\n    this.bidList = this.params.row.tender_info;\n  },\n  directives: {\n    focus: {\n      // 指令的定义\n      inserted: function inserted(el) {\n        el.focus();\n      }\n    }\n  }\n};",null]}