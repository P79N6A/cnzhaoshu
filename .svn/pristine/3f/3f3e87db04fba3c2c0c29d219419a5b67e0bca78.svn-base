{"remainingRequest":"D:\\zhaoshu\\admin\\iview-admin\\node_modules\\babel-loader\\lib\\index.js!D:\\zhaoshu\\admin\\iview-admin\\node_modules\\eslint-loader\\index.js??ref--13-0!D:\\zhaoshu\\admin\\iview-admin\\src\\store\\module\\app.js","dependencies":[{"path":"D:\\zhaoshu\\admin\\iview-admin\\src\\store\\module\\app.js","mtime":1536733414999},{"path":"D:\\zhaoshu\\admin\\iview-admin\\.babelrc","mtime":1536565681652},{"path":"D:\\zhaoshu\\admin\\iview-admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1536566309539},{"path":"D:\\zhaoshu\\admin\\iview-admin\\node_modules\\babel-loader\\lib\\index.js","mtime":1529635966000},{"path":"D:\\zhaoshu\\admin\\iview-admin\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\nimport _toConsumableArray from \"D:\\\\zhaoshu\\\\admin\\\\iview-admin\\\\node_modules\\\\@babel\\\\runtime/helpers/builtin/es6/toConsumableArray\";\nimport { getBreadCrumbList, setTagNavListInLocalstorage, getMenuByRouter, getTagNavListFromLocalstorage, getHomeRoute, routeHasExist } from '@/libs/util';\nimport routers from '@/router/routers';\nimport { getRemoveagsNav } from \"@/libs/util\";\nexport default {\n  state: {\n    breadCrumbList: [],\n    tagNavList: [],\n    homeRoute: getHomeRoute(routers),\n    local: ''\n  },\n  getters: {\n    menuList: function menuList(state, getters, rootState) {\n      return getMenuByRouter(routers, rootState.user.access);\n    }\n  },\n  mutations: {\n    setBreadCrumb: function setBreadCrumb(state, routeMetched) {\n      state.breadCrumbList = getBreadCrumbList(routeMetched, state.homeRoute);\n    },\n    setTagNavList: function setTagNavList(state, list) {\n      if (list) {\n        state.tagNavList = _toConsumableArray(list);\n        setTagNavListInLocalstorage(_toConsumableArray(list));\n      } else state.tagNavList = getTagNavListFromLocalstorage();\n    },\n    addTag: function addTag(state, _ref) {\n      var route = _ref.route,\n          _ref$type = _ref.type,\n          type = _ref$type === void 0 ? 'unshift' : _ref$type;\n\n      if (!routeHasExist(state.tagNavList, route)) {\n        if (type === 'push') state.tagNavList.push(route);else {\n          if (route.name === 'home') state.tagNavList.unshift(route);else state.tagNavList.splice(1, 0, route);\n        }\n        setTagNavListInLocalstorage(_toConsumableArray(state.tagNavList));\n      }\n    },\n    removeTag: function removeTag(state, name) {\n      state.tagNavList = getRemoveagsNav(state.tagNavList, name);\n      history.go(-1);\n    },\n    setLocal: function setLocal(state, lang) {\n      state.local = lang;\n    }\n  }\n};",{"version":3,"sources":["src\\store\\module\\app.js"],"names":["getBreadCrumbList","setTagNavListInLocalstorage","getMenuByRouter","getTagNavListFromLocalstorage","getHomeRoute","routeHasExist","routers","getRemoveagsNav","state","breadCrumbList","tagNavList","homeRoute","local","getters","menuList","rootState","user","access","mutations","setBreadCrumb","routeMetched","setTagNavList","list","addTag","route","type","push","name","unshift","splice","removeTag","history","go","setLocal","lang"],"mappings":";;AAAA,SAASA,iBAAT,EAA4BC,2BAA5B,EAAyDC,eAAzD,EAA0EC,6BAA1E,EAAyGC,YAAzG,EAAuHC,aAAvH,QAA4I,aAA5I;AACA,OAAOC,OAAP,MAAoB,kBAApB;AACA,SAAQC,eAAR,QAA8B,aAA9B;AAEA,eAAe;AACbC,SAAO;AACLC,oBAAgB,EADX;AAELC,gBAAY,EAFP;AAGLC,eAAWP,aAAaE,OAAb,CAHN;AAILM,WAAO;AAJF,GADM;AAObC,WAAS;AACPC,cAAU,kBAACN,KAAD,EAAQK,OAAR,EAAiBE,SAAjB;AAAA,aAA+Bb,gBAAgBI,OAAhB,EAAyBS,UAAUC,IAAV,CAAeC,MAAxC,CAA/B;AAAA;AADH,GAPI;AAUbC,aAAW;AACTC,iBADS,yBACMX,KADN,EACaY,YADb,EAC2B;AAClCZ,YAAMC,cAAN,GAAuBT,kBAAkBoB,YAAlB,EAAgCZ,MAAMG,SAAtC,CAAvB;AACD,KAHQ;AAITU,iBAJS,yBAIMb,KAJN,EAIac,IAJb,EAImB;AAC1B,UAAIA,IAAJ,EAAU;AACRd,cAAME,UAAN,sBAAuBY,IAAvB;AACArB,uDAAgCqB,IAAhC;AACD,OAHD,MAGOd,MAAME,UAAN,GAAmBP,+BAAnB;AACR,KATQ;AAUToB,UAVS,kBAUDf,KAVC,QAUmC;AAAA,UAA3BgB,KAA2B,QAA3BA,KAA2B;AAAA,2BAApBC,IAAoB;AAAA,UAApBA,IAAoB,0BAAb,SAAa;;AAC1C,UAAI,CAACpB,cAAcG,MAAME,UAApB,EAAgCc,KAAhC,CAAL,EAA6C;AAC3C,YAAIC,SAAS,MAAb,EAAqBjB,MAAME,UAAN,CAAiBgB,IAAjB,CAAsBF,KAAtB,EAArB,KACK;AACH,cAAIA,MAAMG,IAAN,KAAe,MAAnB,EAA2BnB,MAAME,UAAN,CAAiBkB,OAAjB,CAAyBJ,KAAzB,EAA3B,KACKhB,MAAME,UAAN,CAAiBmB,MAAjB,CAAwB,CAAxB,EAA2B,CAA3B,EAA8BL,KAA9B;AACN;AACDvB,uDAAgCO,MAAME,UAAtC;AACD;AACF,KAnBQ;AAoBToB,aApBS,qBAoBCtB,KApBD,EAoBOmB,IApBP,EAoBY;AACnBnB,YAAME,UAAN,GAAmBH,gBAAgBC,MAAME,UAAtB,EAAiCiB,IAAjC,CAAnB;AACAI,cAAQC,EAAR,CAAW,CAAC,CAAZ;AACD,KAvBQ;AAyBTC,YAzBS,oBAyBCzB,KAzBD,EAyBQ0B,IAzBR,EAyBc;AACrB1B,YAAMI,KAAN,GAAcsB,IAAd;AACD;AA3BQ;AAVE,CAAf","sourceRoot":"D:\\zhaoshu\\admin\\iview-admin","sourcesContent":["import { getBreadCrumbList, setTagNavListInLocalstorage, getMenuByRouter, getTagNavListFromLocalstorage, getHomeRoute, routeHasExist } from '@/libs/util'\nimport routers from '@/router/routers'\nimport {getRemoveagsNav} from \"@/libs/util\"\n\nexport default {\n  state: {\n    breadCrumbList: [],\n    tagNavList: [],\n    homeRoute: getHomeRoute(routers),\n    local: ''\n  },\n  getters: {\n    menuList: (state, getters, rootState) => getMenuByRouter(routers, rootState.user.access)\n  },\n  mutations: {\n    setBreadCrumb (state, routeMetched) {\n      state.breadCrumbList = getBreadCrumbList(routeMetched, state.homeRoute)\n    },\n    setTagNavList (state, list) {\n      if (list) {\n        state.tagNavList = [...list]\n        setTagNavListInLocalstorage([...list])\n      } else state.tagNavList = getTagNavListFromLocalstorage()\n    },\n    addTag (state, { route, type = 'unshift' }) {\n      if (!routeHasExist(state.tagNavList, route)) {\n        if (type === 'push') state.tagNavList.push(route)\n        else {\n          if (route.name === 'home') state.tagNavList.unshift(route)\n          else state.tagNavList.splice(1, 0, route)\n        }\n        setTagNavListInLocalstorage([...state.tagNavList])\n      }\n    },\n    removeTag(state,name){\n      state.tagNavList = getRemoveagsNav(state.tagNavList,name);\n      history.go(-1)\n    }\n    ,\n    setLocal (state, lang) {\n      state.local = lang\n    }\n  }\n}\n"]}]}