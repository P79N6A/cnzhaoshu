{"remainingRequest":"D:\\zhaoshuwang\\admin\\iview-admin\\node_modules\\thread-loader\\dist\\cjs.js!D:\\zhaoshuwang\\admin\\iview-admin\\node_modules\\babel-loader\\lib\\index.js!D:\\zhaoshuwang\\admin\\iview-admin\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\zhaoshuwang\\admin\\iview-admin\\src\\view\\main\\main.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\zhaoshuwang\\admin\\iview-admin\\src\\view\\main\\main.vue","mtime":1536568701395},{"path":"D:\\zhaoshuwang\\admin\\iview-admin\\.babelrc","mtime":1536565681652},{"path":"D:\\zhaoshuwang\\admin\\iview-admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1536566309539},{"path":"D:\\zhaoshuwang\\admin\\iview-admin\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\zhaoshuwang\\admin\\iview-admin\\node_modules\\babel-loader\\lib\\index.js","mtime":1529635966000},{"path":"D:\\zhaoshuwang\\admin\\iview-admin\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.split\";\nimport _objectSpread from \"D:\\\\zhaoshuwang\\\\admin\\\\iview-admin\\\\node_modules\\\\@babel\\\\runtime/helpers/builtin/es6/objectSpread\";\nimport \"core-js/modules/es6.function.name\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport SideMenu from './components/side-menu';\nimport HeaderBar from './components/header-bar';\nimport TagsNav from './components/tags-nav';\nimport User from './components/user';\nimport Fullscreen from './components/fullscreen';\nimport Language from './components/language';\nimport { mapMutations, mapActions } from 'vuex';\nimport { getNewTagList, getNextRoute, routeEqual } from '@/libs/util';\nimport minLogo from '@/assets/images/logo-min.jpg';\nimport maxLogo from '@/assets/images/logo.jpg';\nimport './main.less';\nexport default {\n  name: 'Main',\n  components: {\n    SideMenu: SideMenu,\n    HeaderBar: HeaderBar,\n    Language: Language,\n    TagsNav: TagsNav,\n    Fullscreen: Fullscreen,\n    User: User\n  },\n  data: function data() {\n    return {\n      collapsed: false,\n      minLogo: minLogo,\n      maxLogo: maxLogo,\n      isFullscreen: false\n    };\n  },\n  computed: {\n    tagNavList: function tagNavList() {\n      return this.$store.state.app.tagNavList;\n    },\n    tagRouter: function tagRouter() {\n      return this.$store.state.app.tagRouter;\n    },\n    userAvator: function userAvator() {\n      return this.$store.state.user.avatorImgPath;\n    },\n    cacheList: function cacheList() {\n      return this.tagNavList.length ? this.tagNavList.filter(function (item) {\n        return !(item.meta && item.meta.notCache);\n      }).map(function (item) {\n        return item.name;\n      }) : [];\n    },\n    menuList: function menuList() {\n      return this.$store.getters.menuList;\n    },\n    local: function local() {\n      return this.$store.state.app.local;\n    }\n  },\n  methods: _objectSpread({}, mapMutations(['setBreadCrumb', 'setTagNavList', 'addTag', 'setLocal']), mapActions(['handleLogin']), {\n    turnToPage: function turnToPage(route) {\n      var _ref = {},\n          name = _ref.name,\n          params = _ref.params,\n          query = _ref.query;\n      if (typeof route === 'string') name = route;else {\n        name = route.name;\n        params = route.params;\n        query = route.query;\n      }\n\n      if (name.indexOf('isTurnByHref_') > -1) {\n        window.open(name.split('_')[1]);\n        return;\n      }\n\n      this.$router.push({\n        name: name,\n        params: params,\n        query: query\n      });\n    },\n    handleCollapsedChange: function handleCollapsedChange(state) {\n      this.collapsed = state;\n    },\n    handleCloseTag: function handleCloseTag(res, type, route) {\n      var openName = '';\n\n      if (type === 'all') {\n        this.turnToPage('home');\n        openName = 'home';\n      } else if (routeEqual(this.$route, route)) {\n        if (type === 'others') {\n          openName = route.name;\n        } else {\n          var nextRoute = getNextRoute(this.tagNavList, route);\n          this.$router.push(nextRoute);\n          openName = nextRoute.name;\n        }\n      }\n\n      this.setTagNavList(res);\n      this.$refs.sideMenu.updateOpenName(openName);\n    },\n    handleClick: function handleClick(item) {\n      this.turnToPage(item);\n    }\n  }),\n  watch: {\n    '$route': function $route(newRoute) {\n      this.setBreadCrumb(newRoute.matched);\n      this.setTagNavList(getNewTagList(this.tagNavList, newRoute));\n    }\n  },\n  mounted: function mounted() {\n    /**\n     * @description 初始化设置面包屑导航和标签导航\n     */\n    this.setTagNavList();\n    this.addTag({\n      route: this.$store.state.app.homeRoute\n    });\n    this.setBreadCrumb(this.$route.matched); // 设置初始语言\n\n    this.setLocal(this.$i18n.locale); // 文档提示\n\n    this.$Notice.info({\n      title: '想快速上手，去看文档吧',\n      duration: 0,\n      render: function render(h) {\n        return h('p', {\n          style: {\n            fontSize: '13px'\n          }\n        }, ['点击', h('a', {\n          attrs: {\n            href: 'https://lison16.github.io/iview-admin-doc/#/',\n            target: '_blank'\n          }\n        }, 'iview-admin2.0文档'), '快速查看']);\n      }\n    });\n  }\n};",null]}