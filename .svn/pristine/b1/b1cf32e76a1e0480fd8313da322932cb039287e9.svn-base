<template>
    <div>
        <div style="padding-bottom: 10px">
            <div>
                <Input v-model="shop_name" placeholder="店铺名称" clearable style="width: 170px;margin-right: 10px"/>
                <Select v-model="member_level" @on-change="getManageList()" style="width:100px" placeholder="店铺等级">
                    <Option :value="2">店铺旗舰店</Option>
                    <Option :value="1">店铺认证店</Option>
                    <Option :value="0">普通会员</Option>
                </Select>
                <DatePicker type="daterange" split-panels placeholder="认证时间" @on-change="getIncludTime"
                            style="width: 200px; margin-left: 10px"></DatePicker>
                <Button @click="getManageList()" style="margin-left: 20px" type="primary">
                    <Icon type="search"/>
                    搜索
                </Button>
            </div>
        </div>
        <Table border :columns="columns" :data="storeList" @on-row-click="linkInfo"
               :class=""></Table>
        <div style="padding: 20px 0;text-align: center;background: #fff">
            <Page :total="totle" :page-size="10" :current="p" @on-change="changePage" show-elevator/>
        </div>

    </div>
</template>
<script>
    import {getBidList, changeProjectStatus} from '@/api/data'
    import {getManagementList} from '@/api/management'
    import {getRemoveagsNav} from '@/libs/util'
    import {mapMutations} from 'vuex'
    import {remainingTime} from "@/libs/tools"
    import QRcode from 'qrcodejs2'

    export default {
        data() {
            return {
                shop_name: [],
                member_level: 0,
                totle: "",
                member_paid_time: [],
                member_expire_time: [],
                columns: [
                    {
                        title: '序号',
                        key: 'index',
                        render: (h, params) => {
                            return h('div', [
                                h('Icon', {
                                    props: {
                                        type: 'person'
                                    }
                                }),
                                h('strong', params.index + 1)
                            ])
                        }
                    },
                    {
                        title: '店铺名称',
                        key: 'shopname'
                    },
                    {
                        title: '联系方式',
                        key: 'phone'
                    },
                    {
                        title: '认证时间',
                        key: 'member_paid_time',
                    },
                    {
                        title: '到期时间',
                        key: 'member_expire_time',
                    },
                    {
                        title: '认证修改',
                        key: 'member_level',
                    }
                ],
                storeList: [],

                p: 1
            }
        },
        methods: {
            ...mapMutations([
                'setBreadCrumb',
                'setTagNavList',
                'addTag',
                'setLocal',
                'removeTag',
            ]),
            //获取时间
            getIncludTime(date) {
                this.member_paid_time = date[0]
                this.member_expire_time = date[1]
            },
            getManageList() {

                let prames = {
                    p: this.p,
                    shop_name: this.shop_name,
                    member_level: this.member_level,
                    member_paid_time: this.member_paid_time,
                    member_expire_time: this.member_expire_time
                }
                getManagementList(prames).then(res => {
                    let storeList = res.data.data;
                    this.storeList = storeList
                    let totle_num = res.data.msg
                    this.totle = totle_num
                })
                this.p = 1
            },
            changePage(p) {
                this.p = p
                this.getManageList()
            },
        },
        mounted() {
            this.getManageList()
            /*this.removeTag("projectList");*/
            document.getElementsByClassName('content-wrapper')[0].addEventListener('scroll', this.handleScroll)
        },
        beforeDestroy() {
            document.getElementsByClassName('content-wrapper')[0].removeEventListener('scroll', this.handleScroll)
        }
    }
</script>
